
# 监控服务配置
spring:
  application:
    name: seven-common
  boot:
    admin:
      url: http://localhost:8080/common




# profile配置
spring.profiles.active: dev

# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /common

# 数据库配置
spring.datasource:
  url: ${mysql.url}
  username: ${mysql.username}
  password: ${mysql.password}
  initial-size: 5
  min-idle: 2
  max-active: 20
  test-on-borrow: true
  driver-class-name: com.mysql.jdbc.Driver

spring.datasource.names: one

spring.datasource.one:
    url: ${mysqlSt.url}
    username: ${mysqlSt.username}
    password: ${mysqlSt.password}
    initial-size: 5
    min-idle: 2
    max-active: 20
    test-on-borrow: true
    driver-class-name: com.mysql.jdbc.Driver

mybatis:
  mapper-locations: classpath:mapping/**/*.xml
  configuration:
    map-underscore-to-camel-case: true


# 日志配置：
logging:
  config:
    classpath:
      logback-spring.xml
  level:
    root : info

#redis
redis:
  database : 0
  #redis机器ip
  host: 127.0.0.1
  #redis端口
  port: 6379
  #redis密码
  password:
  #redis超时时间（毫秒），如果不设置，取默认值2000
  timeout: 1000
  jedis:
      pool:
        #连接池中的最小空闲连接
        min-idle: 1
        #连接池中的最大空闲连接
        max-idle: 10
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1

    #redis集群配置
  #spring.cluster.nodes=192.168.1.1:7001,192.168.1.1:7002,192.168.1.1:7003,192.168.1.1:7004,192.168.1.1:7005,192.168.1.1:7006
  #spring.cluster.max-redirects=3

  #哨兵模式
  #sentinel.host1=192.168.1.1
  #sentinel.port1=26379

  #sentinel.host2=192.168.1.2
  #sentinel.port2=26379
